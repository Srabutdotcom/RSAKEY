import{ASN1 as L}from"npm:@lapo/asn1js";import{Base64 as V}from"npm:@lapo/asn1js/base64.js";import{Defs as U}from"npm:@lapo/asn1js/defs.js";import o from"npm:big-integer";import{validate as h}from"https://deno.land/x/validatevalue@v1.0.2/mod.js";import*as q from"@stablelib/sha256";import*as B from"@stablelib/sha384";import*as F from"@stablelib/sha512";var I=class{validSHA=[256,384,512];sha=256;saltLength=32;hash={sha256:q,sha384:B,sha512:F};OS2IP=w;I2OSP=D;I2OSP_array=S;I2OSP_uint8=S;RSASP1=M;RSAVP1=T;constructor(t,n){if(O(t))return TypeError("Parameter 1 is mandatory in the form of PEM String");if(x(t)==!1)return TypeError("Parameter 1 is not in the form of PEM String");this.enc=V.unarmor(t),this.asn1=L.decode(this.enc);let{type:e,key:s}=N(this.asn1);if(e.name!=="RSAPrivateKey")return TypeError(`Expected RSAPrivateKey but got ${e.name}`);this.type=e,this.key=s,this.nUint8=this.component("n"),this.version=s.sub[0].content(),this.n=o(s.sub[1].content().split(/\n/)[1]),this.e=o(s.sub[2].content()),this.d=o(s.sub[3].content().split(/\n/)[1]),this.p=o(s.sub[4].content().split(/\n/)[1]),this.q=o(s.sub[5].content().split(/\n/)[1]),this.dP=o(s.sub[6].content().split(/\n/)[1]),this.dQ=o(s.sub[7].content().split(/\n/)[1]),this.qInv=o(s.sub[8].content().split(/\n/)[1]),b(n)&&h(n,[{sha:256,saltLength:32}])&&(n.sha&&this.validSHA.includes(n.sha)&&(this.sha=n.sha),b(n.saltLength)&&n.saltLength!==this.saltLength&&(this.saltLength=n.saltLength),b(n.salt)&&(this.salt=n.salt,this.saltLength=this.salt.length))}component(t){let n=h(t,["number","string"],["n","d","p","q","dp","dq","qinv",1,3,4,5,6,7,8]);if(n!==!0)return n;let e=["n-1","d-3","p-4","q-5","dp-6","dq-7","qinv-8"],s;if(typeof t=="number")s=t;else if(typeof t=="string")s=e.find(g=>g.includes(t.toLowerCase()))?.split("-")[1];else return"Error: expected number or string of component";let{enc:i,pos:a}=this.key.sub[s].stream,{header:l,length:c}=this.key.sub[s],u=a+l,m=u+c,f=i[u]==0?1:0;return i.slice(u+f,m)}MGF1(t,n){let e=h(t,[Uint8Array]);if(e!==!0)return Error("parameter 1 should be Uint8Array");if(e=h(n,["number"]),e!==!0)return Error('parameter 2 should be "number"');let s=this.sha/8;if(n>Math.pow(2,32)*s)throw new Error("mask too long");let i=new Uint8Array(0),a=4,l=Math.ceil(n/s)-1;for(let c=0;c<=l;c++){let u=P(c,a),m=d(t,u),f=this.hash["sha"+this.sha].hash(m);i=d(i,f)}return i.slice(0,n)}EMSA_PSS_ENCODE(t){if(h(t,[Uint8Array]),t.length>Math.pow(2,61)-1)throw new Error("message too long");let n=this.hash["sha"+this.sha].hash(t),e=n.length,s=this.nUint8.length*8-1,i=Math.ceil(s/8),a=this.saltLength;if(i<e+a+2)throw new Error(`Error: emLen less than ${e} + ${a} + 2`);let l=this.salt?this.salt:self.crypto.getRandomValues(new Uint8Array(a)),c=d(new Uint8Array(8),n,l),u=this.hash["sha"+this.sha].hash(c),m=new Uint8Array(i-a-e-2),f=d(m,new Uint8Array([1]),l),g=this.MGF1(u,f.length),E=new Uint8Array(f.length);for(let y=0;y<f.length;y++)E[y]=f[y]^g[y];let A=v(E,i,s);return d(A,u,new Uint8Array([188]))}EMSA_PSS_VERIFY(t,n){if(h(t,[Uint8Array]),h(n,[Uint8Array]),t.length>Math.pow(2,61)-1)return"inconsistent";let e=this.hash["sha"+this.sha].hash(t),s=e.length,i=this.nUint8.length*8-1,a=Math.ceil(i/8),l=this.saltLength;if(a<s+l+2||n[n.length-1]!==188)return"inconsistent";let c=n.slice(0,a-s-1),u=n.slice(a-s-1,a-1);if(H(c,a,i)==!1)return"inconsistent";let f=this.MGF1(u,c.length),g=new Uint8Array(c.length);for(let p=0;p<g.length;p++)g[p]=c[p]^f[p];let E=v(g,a,i),A=a-s-l-2;if(!E.slice(0,A).every(p=>p===0)||E[A]!==1)return"inconsistent";let y=g.slice(g.length-l),_=d(new Uint8Array(8),e,y);return this.hash["sha"+this.sha].hash(_).every((p,R)=>p===u[R])?"consistent":"inconsistent"}RSASSA_PSS_SIGN(t){h(t,[Uint8Array]);let n=this.EMSA_PSS_ENCODE(t),e=w(n),s=M(e,{n:this.n,d:this.d});return P(s,this.nUint8.length)}RSASSA_PSS_VERIFY(t={n:BigInt(0),e:BigInt(0)},n,e){if(h(t,[{n:BigInt(0),e:BigInt(0)}]),h(n,[Uint8Array]),h(e,[Uint8Array]),e.length!==this.nUint8.length)return TypeError(`Error: signature length at ${e.length} is not match with modulus length at ${this.nUint8.length}`);let s=w(e),i=T(s,t),a=Math.ceil((this.nUint8.length*8-1)/8),l=P(i,a);return this.EMSA_PSS_VERIFY(n,l)=="consistent"?"valid signature":"invalid signature"}},O=r=>r===void 0,b=r=>O(r)==!1;function x(r){return typeof r!="string"?!1:/^(-----BEGIN (RSA PRIVATE|PRIVATE) KEY-----\n?(?:[A-Za-z0-9+/=]+\n?)*-----END (RSA PRIVATE|PRIVATE) KEY-----)\n?$/.test(r)}function N(r){let t=r;for(;;){let n=U.commonTypes.map(s=>{let i=U.match(t,s);return{type:s,match:i.recognized/i.total}}).sort((s,i)=>i.match-s.match);if(n[0].match==1)return delete t.def,{type:n[0].type,key:t};if(t.sub.length<1)throw Error("Key is not found ");t=C(t.sub)}}function C(r){let t=null;for(let n of r)n.hasOwnProperty("length")&&(!t||n.length>t.length)&&(t=n);return delete t.def,t}function d(...r){let t=new Uint8Array(0),n=t;for(let e of r)t=new Uint8Array(e.length+n.length),t.set(n),t.set(e,n.length),n=t;return t}function w(r){h(r,[Uint8Array,Array]);let t=o(0),n=r.length;for(let e=0;e<n;e++){let s=r.at(e);t=t.plus(o(s).multiply(o(256).pow(n-e-1)))}return t}function D(r,t){return S(r,t).map(n=>String.fromCharCode(n)).join("")}function P(r,t){return new Uint8Array(S(r,t))}function S(r,t){let n=h(r,[o,"number"]);if(n instanceof TypeError)return n;if(r=o(r),r.isNegative())return TypeError("Input x must be a non-negative (big)-integer");if(n=h(t,[o,"number"]),n instanceof TypeError)return n;if(t=o(t),t.lesserOrEquals(0))return TypeError("Input xLen must be a positive integer");let e=o(256).pow(t);if(r.greaterOrEquals(e))return TypeError("integer too large");let s=[];for(let i=t.minus(1);i.greaterOrEquals(0);i=i.minus(1)){let a=r.divide(o(256).pow(i));s.push(a),r=r.minus(a.multiply(o(256).pow(i)))}return s}function M(r,t){let n=h(r,[o,"number"]);if(n instanceof TypeError||(n=h(t,[{n:o(0),d:o(0)}]),n instanceof TypeError))return n;let{n:e,d:s}=t;return o(r).isNegative()||o(r).greaterOrEquals(e)?TypeError("message representative out of range"):o(r).modPow(s,e)}function T(r,t){let n=h(r,[o,"number"]);if(n instanceof TypeError||(n=h(t,[{n:o(0),e:o(0)}]),n instanceof TypeError))return n;let{n:e,e:s}=t;return o(r).isNegative()||o(r).greaterOrEquals(e)?TypeError("message representative out of range"):o(r).modPow(s,e)}function v(r,t,n){let e=Math.floor((t*8-n)/8),s=(t*8-n)%8,i=new Uint8Array(r.length);i.fill(0,0,e),i.set(r.subarray(e),e);let a=r[e]&255>>s;return i[e]=a,i}function H(r,t,n){let e=Math.floor((t*8-n)/8),s=(t*8-n)%8,i=new Uint8Array(e);if(i.length==0)return!0;i[0]=r[e]&~(255>>s),e<r.length&&i.set(r.subarray(e),e);for(let a of i)if(a!==0)return!1;return!0}export{D as I2OSP,S as I2OSP_array,P as I2OSP_uint8,w as OS2IP,I as RSAKey,M as RSASP1,T as RSAVP1};
